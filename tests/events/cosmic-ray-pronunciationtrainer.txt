[job-id] ae854cff18a342ecac2ef2f759289634
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_Sub 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']-fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 3e27a7ddcae2449d948fdc5513c1f03e
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_Mul 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']*fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 39cf12d01e404d39929763b8e734bd09
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_Div 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']/fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] cb3d51346df24ba0b1115a6e4e34ed56
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_FloorDiv 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']//fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] f0ffd915a3894f709f5718dd4d1e8cb1
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_Mod 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']%fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] b487b0322a6d45568d628e1f71201535
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_Pow 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']**fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] ba524962cf5b469a8d5c2625f17f8cbd
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_RShift 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']>>fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] b684ccd554e747ab8064f14a7415866e
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_LShift 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']<<fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 3548e039cf374cb282997c17f5837469
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_BitOr 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']|fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 592fa740d42c450b833af8513d0cb721
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_BitAnd 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']&fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] bc4f2029273c482fabd49281caaa712b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Add_BitXor 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples-1, word['end_ts']^fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 609554e3c26242779e0d223d5e3b64df
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Add 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']+fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] 078739cb19b64c93b934b057d8a75636
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Add 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples+1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 4b94d9a1580a4788964aa8bb7b1e5f84
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Add 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() + start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] 92560397fa324759b7192f090b7f7338
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Add 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() + start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] 2c3c8b95f59c41b98af4ec9a3edf81a5
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Add 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)+1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] fcfc0e8fd3424a08ae71ca15814fad29
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Add 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word+number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 5b24ee8c803443dcb37a796c68f836f9
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Add 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes+total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 2236adf28c0841f4b71f87c675eb8118
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Add 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds+accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] d848ce3ec09242c0841caee7aa259370
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Add 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio+torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 9c3c6cab2f214d6daea90651560f2462
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mul 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']*fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] c5ef9e975af84a9fbbb2ca57e48c7057
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mul 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples*1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 01f3f7a1c6cf4bda90b529ad5ac4dd56
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mul 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() * start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] ca561826d98e4a0b8399121b43e4651e
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mul 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() * start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] 6a08e9adbe294d008602c89ff43cee79
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mul 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)*1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] b27657d3fcc34625ba220d18fe2fd41c
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mul 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word*number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] b44c93ecfbab4835a185e40a89fbfa8a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mul 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes*total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] ec30367fd7774791bc9742dff722a0a8
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mul 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds*accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] 3ba572cccd2e4cc1813b96eefc250903
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mul 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio*torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 41533902f9af4507919bfb885f6f5e3b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Div 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']/fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] 6b029aab934b45aea1cee190180e3484
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Div 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples/1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 1584386cff404d94a425435bcc28a8d5
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Div 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() / start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] 947d06ca66d94558aeeb7c02eb437e5a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Div 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() / start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] b1bd3a34b541434c967a57c80601032c
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Div 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)/1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 26aeb4f35e06447cb0ddd3be38986699
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Div 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word/number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 5a0302ef2e3f4455b53f020da1c8f102
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Div 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes/total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] c0de19210707460da80d8350d1eb0fad
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Div 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds/accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] 1325eb96d40b4cd38f24b48a436c048c
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Div 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio/torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 9334e714b3294d56949d55e138b21a19
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_FloorDiv 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']//fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] c03619105c25437fb672d18f995ea29a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_FloorDiv 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples//1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 3af1ab91fcca4d609ba0499541005a07
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_FloorDiv 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() // start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] b5676fa6357d47fe8e04872270051bb8
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_FloorDiv 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() // start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] ef16806abc714390ad6ecbfb0aa0d199
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_FloorDiv 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)//1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 44fd52a764614a5fa5559dcd5ee66173
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_FloorDiv 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word//number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] d30e73191e074d9f9e651408b55aa9bb
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_FloorDiv 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes//total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] df3630a9dff643a7b6085810986c3add
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_FloorDiv 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds//accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] 233f1b076bcc4e3ebe42d3a885beac8c
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_FloorDiv 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio//torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] bd0db9ce8505436582135c83acdcec88
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mod 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']%fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] 4ad5670cf7274d589f8825cb43a67a32
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mod 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples%1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 99c6bbf3e5094548af0c8fcc61e47908
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mod 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() % start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] e52e76c570a04b1e9c2f908cd372e0d6
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mod 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() % start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] fb9a1abb5f3a4a158b924ef67bfa26e4
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mod 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)%1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 6486426a78fd4d5ab6a2042b3280abb3
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mod 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word%number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] fd05fe1a367e43b3aa9f587a01c293f2
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mod 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes%total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 0710e610f2e74880b66dd1ab99e965b7
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mod 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds%accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] 57added1d40a49d290941e3b2b366679
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Mod 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio%torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 8253f29d1acf4860a27703e2c88df31a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Pow 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']**fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] a4a075b949ee494faa32751bac405fe7
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Pow 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples**1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] c90eb75a016c4c63b4f06f02c2f891be
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Pow 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() ** start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] 80d7c191bf9e4c648fa0b86103512c24
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Pow 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() ** start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] 4e23dff4c4a742b5ba264d99df3e7022
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Pow 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)**1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 8c0c042e5d234629a1f5fb553117e175
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Pow 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word**number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] c98b25fce57a4bd9899cbf1e1f191e1b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Pow 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes**total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] f37467000e4940099b5011ad1667eceb
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Pow 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds**accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] 60e8ab6f950044738476ad82b3071af2
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_Pow 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio**torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 3b47c3ad402e40f6adecf8b25f729b30
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_RShift 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']>>fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] f74a942c1de34a7e85df5e2e13ab464e
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_RShift 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples>>1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] cd7b63c61e9245e594ce2bf0742e2f23
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_RShift 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() >> start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] c6984195eb734b30880eeb57a3c6bfac
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_RShift 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() >> start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] e5306181c92d449991343bfaeff3e6f0
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_RShift 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)>>1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 8c8ac6e27e434200a34806abb2f8ae2f
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_RShift 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word>>number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] c0435a30c54d4485bc18416e066c16f7
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_RShift 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes>>total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] fd371f30798948fd97903a0be7fe5ae6
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_RShift 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds>>accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] cf077a6cc6c848b1984c3bd869ed6ac5
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_RShift 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio>>torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 3c5e7d0970d84bc19368665218dfa1cd
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_LShift 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']<<fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] 0a5eb7efbf8641fc9c1d3cd724b3e751
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_LShift 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples<<1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] c889e83bbb114b50bbff1f038ea0fa91
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_LShift 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() << start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] 69512310a7484f37a21cd9883309850e
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_LShift 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() << start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] 8a2b6bab6e404db28ca4eb7be76a28cb
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_LShift 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)<<1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] d48e3909b5c741d19bc3ae3346b1d87b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_LShift 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word<<number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 3e17840db36040a28aae9b539e026646
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_LShift 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes<<total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 9f7e794d5e98480c933d92138b76b47d
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_LShift 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds<<accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] 17b89af115744f0d8d80851379b0b4a7
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_LShift 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio<<torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 0404e59029e14e45a66fb39cd06cc1aa
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitOr 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']|fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] 710f1f0d3a4c4e7eb03590f8b2776dd7
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitOr 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples|1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] fa32c7c210ac4f05ae824cf158e48ddd
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitOr 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() | start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] a7da06311469494788435aa16de3397b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitOr 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() | start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] 67589c2d9ace4199b8ecdd7adda9ab2b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitOr 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)|1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 9362552e176c4935b7af91c92a81fced
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitOr 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word|number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] e073fba869234f439f6022449e6b51e3
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitOr 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes|total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 39215bf271f642e290a25bbb83c7fc59
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitOr 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds|accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] ce48bd562803412c98abb58bbecaadc1
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitOr 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio|torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] e4dadd4f253e4fbfbc55538d6d591c8a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitAnd 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']&fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] 233e4a41bac44cf180203cb8ad9f93a5
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitAnd 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples&1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 0d8a9bdb3fbf4a4da7345b51b49f9c79
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitAnd 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() & start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] 804ef100bff842f08511b0a451397a06
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitAnd 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() & start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] 07290bf6bb6345e9887eccc2af52dbff
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitAnd 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)&1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] b72cf5bcd8994234ae858acbe302a6ba
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitAnd 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word&number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 7122ec7eb28e487ba8847a6d3c15f730
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitAnd 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes&total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] f14d4b3a38ff4116aac04941816fb804
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitAnd 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds&accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] e841e08ad3774144b5776ad489b56238
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitAnd 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio&torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] b957485cf4fd41f6bdf461afe48ef92d
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitXor 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']^fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] 96cc87267f934c1d8486f4f9b2a29e60
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitXor 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples^1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] ab9573b57ac549999567de25167b4d4c
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitXor 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -69,7 +69,7 @@
         app_logger.info('starting getAudioTranscript...')
         recording_transcript, recording_ipa, word_locations = self.getAudioTranscript(recordedAudio)
 
-        duration = time.time() - start
+        duration = time.time() ^ start
         app_logger.info(f'Time for NN to transcript audio: {duration}.')
 
         start = time.time()
============
[job-id] 7b0b4ed591954cea87f28265a5946df7
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitXor 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -75,7 +75,7 @@
         start = time.time()
         real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices = self.matchSampleAndRecordedWords(
             real_text, recording_transcript)
-        duration = time.time() - start
+        duration = time.time() ^ start
         app_logger.info(f'Time for matching transcripts: {duration}.')
 
         start_time, end_time = self.getWordLocationsFromRecordInSeconds(
============
[job-id] 4d844bba4f324c48add92044095b60d7
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitXor 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)^1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] a8937723d830400ab46db143453ed851
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitXor 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word^number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 6ea16d0a8a2b4c6fbabd262997513514
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitXor 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes^total_mismatches)/number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 66827c8e0b3a4c11a06245a2472efcc5
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitXor 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -182,7 +182,7 @@
         return categories
 
     def getPronunciationCategoryFromAccuracy(self, accuracy) -> int:
-        return np.argmin(abs(self.categories_thresholds-accuracy))
+        return np.argmin(abs(self.categories_thresholds^accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
============
[job-id] 4e9e0987ac804ad59d20eb4c72e28f11
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Sub_BitXor 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -185,7 +185,7 @@
         return np.argmin(abs(self.categories_thresholds-accuracy))
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
-        audio = audio-torch.mean(audio)
+        audio = audio^torch.mean(audio)
         audio = audio/torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 3dcde74b483b4e09942adfeb174e850d
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Add 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05+self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] e22623c9839742b8874319bb7563624b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Add 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word+100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] aed698ed163342b9911f67b49a1dbdb9
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Add 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes+100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 4190af46df9c446a80428044eeede7b3
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Sub 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05-self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] 460ed6eb95da48e9a7cb97ea9590baf7
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Sub 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word-100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 751ef0ef8d18450ba891e3219f896206
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Sub 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes-100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] b5e7f638b41f43849470760df64a5042
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Div 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05/self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] c4629aa4ffeb48f6bb7e308475fa852e
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Div 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word/100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] d54aa403ac294692827e7ef7cc0b6c54
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Div 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes/100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 71101e8ac5bc419dbf0a9bde98973c95
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_FloorDiv 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05//self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] 3ae67312ee14402a9b820fcdc8eefa14
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_FloorDiv 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word//100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 7e4e22379e1b4fa3be19d25312ed67ff
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_FloorDiv 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes//100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 4916059b0ca14b578bf51ad5dcf1645a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Mod 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05%self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] 0b82a84cd27e4dff891b650544d0912e
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Mod 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word%100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 8de9abae1ccc4d25a1aea9b228101027
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Mod 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes%100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] bbe74847a9fe4a98a4387d3574c59beb
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Pow 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05**self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] 5cb19c710ef2457fb502a59530cdb85a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Pow 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word**100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 1068c70e94fe4c84a1e91f66a297d3f5
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_Pow 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes**100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 8ad15937771b41fbb7142d649ff5e6c0
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_RShift 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05>>self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] f4b7d03c3bb442159df25a508af71faf
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_RShift 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word>>100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 630d430c3e794393b4ddeee7afd1e102
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_RShift 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes>>100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 061dcd2fc9244ed49b9084f7d9e5081d
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_LShift 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05<<self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] aa76fb7363de4c289f48423d28259727
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_LShift 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word<<100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 2285417206c34f0fb1a0c96f1ddc289f
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_LShift 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes<<100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 3075a6a1118c443eb75fc09498691422
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_BitOr 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05|self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] f0aaf2aac5b84ff5a03a318ed98aa7da
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_BitOr 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word|100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 0331d7cc76e44a7697b12ec36781cc2b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_BitOr 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes|100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] d54b477b02094bb08ed389378dfa140b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_BitAnd 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05&self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] a8baa7654d094620951a0f6e24c81d1d
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_BitAnd 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word&100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 27b1c54298214539a0b3e9c67380bc7b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_BitAnd 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes&100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 10207e1eff3b420ea3d9f30b0ddd8f2e
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_BitXor 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 0.05^self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] 91ea8d8ced5b4189943387c4fcdcdbfd
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_BitXor 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word^100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 5bea9b20e0cb4d638597a01a008a1f62
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Mul_BitXor 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes^100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] a0d0a7e226f04a8cab35ced7922cfc57
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Add 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])+self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] 9cd28c0c9d7840c59f150a211e60d5a4
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Add 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])+self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 194adc59633f4d59b5dc950b55a8a7ef
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Add 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)+number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 2854bf86753f44a3a6e54f0f62af366d
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Add 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)+number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 8335399149574537b46014d384919417
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Add 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio+torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 01c46ad2ec80420e8322d462fd00b769
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Sub 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])-self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] 7352e6cdcb6548889529504ec3459f6b
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Sub 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])-self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 1b4b2cad50d24a07ae796152ad3f0356
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Sub 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)-number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 4d5afd7247b64ef6b32863a3bdc0291c
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Sub 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)-number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 62abf72bb5ce4522aff853744072e2c0
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Sub 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio-torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 0588144d49214c80a77959f0916837df
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mul 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])*self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] 7c2e56348ae740cc86fee6f9d0720124
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mul 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])*self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 0135920e06584f29a319f55b39974138
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mul 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)*number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] cd7abe083eb94d8dafb3cadbcd176b3a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mul 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)*number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] c333c1edd7f84ec486ff380e07e6807a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mul 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio*torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 5d833682ed9f43799e7e3dc279d2336f
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_FloorDiv 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])//self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] ba4167f7cb07439a9d0552b84f2989d9
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_FloorDiv 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])//self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 3f67a179cf6e4421856ea40ae47c6b2c
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_FloorDiv 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)//number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] e1acba493c944e8d8d09fd6d8dc79da5
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_FloorDiv 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)//number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 17c1d752560e4dd38bffd1708aabc930
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_FloorDiv 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio//torch.max(torch.abs(audio))
         return audio
 
============
[job-id] f62831289d224a86bf03f179e8c30d41
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mod 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])%self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] 6274479de55f40238da1605edc9a6922
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mod 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])%self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 27dbc03859704315aa2e4ecfbe1bc8ac
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mod 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)%number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] a7165424951f42fd87b24dc0577567ea
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mod 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)%number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 29e93f550bd947b2b23cf883958132a5
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Mod 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio%torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 1c9398367396436790835172bff4ed29
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Pow 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])**self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] e6936e65ef7747809537efb2a4d79c43
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Pow 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])**self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] e8618dc63e4341baa90e55c79f6ae483
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Pow 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)**number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 9a9c461d24f04608812009dc0a29dacc
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Pow 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)**number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] e215d330f6434105bad7aaeabba2d113
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_Pow 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio**torch.max(torch.abs(audio))
         return audio
 
============
[job-id] e9d5f31c3c8d4ac0acf2de856c02e3e8
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_RShift 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])>>self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] 635c5ee3e46e42719cca5c5c63e5a969
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_RShift 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])>>self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 98d5ca25369f4ae7b517600480ac1bc9
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_RShift 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)>>number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] cfaa4fcaa01149b68dda06bb4e6f15d3
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_RShift 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)>>number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 1b3b85b492874ebdb6e95039b3873c6e
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_RShift 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio>>torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 122b5d8041a4441f9f1d07c23c32adb1
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_LShift 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])<<self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] f3e58c3410e8491e89fac63a951e40ba
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_LShift 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])<<self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 3732b77a17504c6fa9c835cc2d025434
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_LShift 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)<<number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 22acf7aae4184973a2a7541fb0167869
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_LShift 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)<<number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] ddd25c00d85a429eb473cdce1f9c9234
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_LShift 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio<<torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 60f76a8d8c834cf69ea2d69cf2e99ead
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitOr 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])|self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] cac27f4ae764412794ee9f1cdc2c0f92
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitOr 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])|self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] b409a970cc384ef1ba339d25356595e3
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitOr 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)|number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 58ac8133ac9a4d04b3b6348a1b79c9a8
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitOr 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)|number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 37c03d1734544d6a823807c76fe80b65
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitOr 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio|torch.max(torch.abs(audio))
         return audio
 
============
[job-id] 1a723b8e548a4c8ba9121c7bfce8a3bc
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitAnd 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])&self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] a452fe1acbe04402bffb519addd96e01
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitAnd 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])&self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] e0e4f24fe8774b289148638f14976563
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitAnd 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)&number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] f4223c2900424a4fa6b6197b44a5942f
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitAnd 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)&number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] e8f21543b98642ef9f2eb37a12a61e3a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitAnd 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio&torch.max(torch.abs(audio))
         return audio
 
============
[job-id] f4fca7b9ff234d1a9b7d9b8f6b054a0f
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitXor 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [0])^self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] e73698ec5b7f4455ae45c6da5393526a
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitXor 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [1])^self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 481efc7896f8484da1189817a2e405f0
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitXor 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)^number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] b7faeeb0c29b47f9b96697927d056855
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitXor 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)^number_of_phonemes*100
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 4072d148ccd74363af93066075c0f718
aip_trainer/pronunciationTrainer.py core/ReplaceBinaryOperator_Div_BitXor 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -186,6 +186,6 @@
 
     def preprocessAudio(self, audio: torch.tensor) -> torch.tensor:
         audio = audio-torch.mean(audio)
-        audio = audio/torch.max(torch.abs(audio))
+        audio = audio^torch.max(torch.abs(audio))
         return audio
 
============
[job-id] b2270490fc304d18a78b65f70a40775d
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_NotEq 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -20,7 +20,7 @@
     model.eval()
     asr_model = AIModels.NeuralASR(model, decoder)
 
-    if language == 'de':
+    if language != 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
     elif language == 'en':
============
[job-id] bb733f8e0b73446ab80513e8bc4f0fa2
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_NotEq 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -23,7 +23,7 @@
     if language == 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
-    elif language == 'en':
+    elif language != 'en':
         phonem_converter = RuleBasedModels.EngPhonemConverter()
     else:
         raise ValueError('Language not implemented')
============
[job-id] 79c19fd534374d58ae0836c7920ea0b0
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_Lt 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -20,7 +20,7 @@
     model.eval()
     asr_model = AIModels.NeuralASR(model, decoder)
 
-    if language == 'de':
+    if language < 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
     elif language == 'en':
============
[job-id] dddd69ba17be4fd992741be6beb1cd51
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_Lt 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -23,7 +23,7 @@
     if language == 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
-    elif language == 'en':
+    elif language < 'en':
         phonem_converter = RuleBasedModels.EngPhonemConverter()
     else:
         raise ValueError('Language not implemented')
============
[job-id] 8bc379df8aea4cc58c0d27c60335762a
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_LtE 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -20,7 +20,7 @@
     model.eval()
     asr_model = AIModels.NeuralASR(model, decoder)
 
-    if language == 'de':
+    if language <= 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
     elif language == 'en':
============
[job-id] afda58e6cd15473ba4570583dd11b4ea
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_LtE 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -23,7 +23,7 @@
     if language == 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
-    elif language == 'en':
+    elif language <= 'en':
         phonem_converter = RuleBasedModels.EngPhonemConverter()
     else:
         raise ValueError('Language not implemented')
============
[job-id] 352e14cb52fe4de59a6454cba9db862c
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_Gt 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -20,7 +20,7 @@
     model.eval()
     asr_model = AIModels.NeuralASR(model, decoder)
 
-    if language == 'de':
+    if language > 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
     elif language == 'en':
============
[job-id] a2e08d49818f461eb029bc4d0c4695b5
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_Gt 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -23,7 +23,7 @@
     if language == 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
-    elif language == 'en':
+    elif language > 'en':
         phonem_converter = RuleBasedModels.EngPhonemConverter()
     else:
         raise ValueError('Language not implemented')
============
[job-id] af458800efd9493ab430344a94380412
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_GtE 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -20,7 +20,7 @@
     model.eval()
     asr_model = AIModels.NeuralASR(model, decoder)
 
-    if language == 'de':
+    if language >= 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
     elif language == 'en':
============
[job-id] db1b5561851a4fb69db43879cec34ce4
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_GtE 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -23,7 +23,7 @@
     if language == 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
-    elif language == 'en':
+    elif language >= 'en':
         phonem_converter = RuleBasedModels.EngPhonemConverter()
     else:
         raise ValueError('Language not implemented')
============
[job-id] a92599a04d544ea7857a1780a96339b9
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_Is 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -20,7 +20,7 @@
     model.eval()
     asr_model = AIModels.NeuralASR(model, decoder)
 
-    if language == 'de':
+    if language is 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
     elif language == 'en':
============
[job-id] 40e49516a8a14018b93ff5abe3b5162c
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_Is 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -23,7 +23,7 @@
     if language == 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
-    elif language == 'en':
+    elif language is 'en':
         phonem_converter = RuleBasedModels.EngPhonemConverter()
     else:
         raise ValueError('Language not implemented')
============
[job-id] 5c15257fa5d84f4cbf5563ac944116e8
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_IsNot 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -20,7 +20,7 @@
     model.eval()
     asr_model = AIModels.NeuralASR(model, decoder)
 
-    if language == 'de':
+    if language is not 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
     elif language == 'en':
============
[job-id] accfcb3b58924e909f68446212741f31
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Eq_IsNot 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -23,7 +23,7 @@
     if language == 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
-    elif language == 'en':
+    elif language is not 'en':
         phonem_converter = RuleBasedModels.EngPhonemConverter()
     else:
         raise ValueError('Language not implemented')
============
[job-id] 9dbc3dc64fe34a7eb3a07768e8214008
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_GtE_Eq 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx == len(mapped_words)-1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 8fd5fb42d1084422b9b6b068bb25e044
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_GtE_NotEq 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx != len(mapped_words)-1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] e229e4bfdca6431ebbad3d26109be60d
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_GtE_Lt 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx < len(mapped_words)-1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 2bfda321d0b646e688fe8d66649abf09
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_GtE_LtE 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx <= len(mapped_words)-1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 132dc0b87ec34c0497b13a022b31a76b
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_GtE_Gt 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx > len(mapped_words)-1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 0b2380878a8a442681e9cf2870c17e8a
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_GtE_Is 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx is len(mapped_words)-1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 571e24a2a9824b2994cbc3a85e8e9d9d
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_GtE_IsNot 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx is not len(mapped_words)-1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 66e66dad2d11465dace0cb854a6e3a77
aip_trainer/pronunciationTrainer.py core/ReplaceComparisonOperator_Is_IsNot 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -129,7 +129,7 @@
     def matchSampleAndRecordedWords(self, real_text, recorded_transcript):
         words_estimated = recorded_transcript.split()
 
-        if real_text is None:
+        if real_text is not None:
             words_real = self.current_transcript[0].split()
         else:
             words_real = real_text.split()
============
[job-id] aafe5073184b4574a61fb420d5e537f3
aip_trainer/pronunciationTrainer.py core/AddNot 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -20,7 +20,7 @@
     model.eval()
     asr_model = AIModels.NeuralASR(model, decoder)
 
-    if language == 'de':
+    if not language == 'de':
         epitran_deu_latn = epitran.Epitran('deu-Latn')
         phonem_converter = RuleBasedModels.EpitranPhonemConverter(epitran_deu_latn)
     elif language == 'en':
============
[job-id] 43c8daa3322e41e0bc06d6f9165dac71
aip_trainer/pronunciationTrainer.py core/AddNot 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -129,7 +129,7 @@
     def matchSampleAndRecordedWords(self, real_text, recorded_transcript):
         words_estimated = recorded_transcript.split()
 
-        if real_text is None:
+        if not real_text is None:
             words_real = self.current_transcript[0].split()
         else:
             words_real = real_text.split()
============
[job-id] 51aa92c3bf10465d85a2c1fb100297fd
aip_trainer/pronunciationTrainer.py core/AddNot 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if not word_idx >= len(mapped_words)-1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] c07b81e6d4fc41729c4aa33a1e27f171
aip_trainer/pronunciationTrainer.py core/NumberReplacer 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -42,7 +42,7 @@
     current_recorded_word_locations: list
     current_recorded_intonations: torch.tensor
     current_words_pronunciation_accuracy = []
-    categories_thresholds = np.array([80, 60, 59])
+    categories_thresholds = np.array([ 81, 60, 59])
 
     sampling_rate = 16000
 
============
[job-id] 4f5bbb80f8964d119c228c1965ceb089
aip_trainer/pronunciationTrainer.py core/NumberReplacer 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -42,7 +42,7 @@
     current_recorded_word_locations: list
     current_recorded_intonations: torch.tensor
     current_words_pronunciation_accuracy = []
-    categories_thresholds = np.array([80, 60, 59])
+    categories_thresholds = np.array([ 79, 60, 59])
 
     sampling_rate = 16000
 
============
[job-id] 992bae5337f348e7b53b0c115b593211
aip_trainer/pronunciationTrainer.py core/NumberReplacer 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -42,7 +42,7 @@
     current_recorded_word_locations: list
     current_recorded_intonations: torch.tensor
     current_words_pronunciation_accuracy = []
-    categories_thresholds = np.array([80, 60, 59])
+    categories_thresholds = np.array([80, 61, 59])
 
     sampling_rate = 16000
 
============
[job-id] 6bd275b10f9c40ebbc85d5d217b787ea
aip_trainer/pronunciationTrainer.py core/NumberReplacer 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -42,7 +42,7 @@
     current_recorded_word_locations: list
     current_recorded_intonations: torch.tensor
     current_words_pronunciation_accuracy = []
-    categories_thresholds = np.array([80, 60, 59])
+    categories_thresholds = np.array([80, 59, 59])
 
     sampling_rate = 16000
 
============
[job-id] d7ed4ff9e4c34d919d80219a6f311c7d
aip_trainer/pronunciationTrainer.py core/NumberReplacer 4
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -42,7 +42,7 @@
     current_recorded_word_locations: list
     current_recorded_intonations: torch.tensor
     current_words_pronunciation_accuracy = []
-    categories_thresholds = np.array([80, 60, 59])
+    categories_thresholds = np.array([80, 60, 60])
 
     sampling_rate = 16000
 
============
[job-id] 7a8229cf9e144ccc9d9296502919daaa
aip_trainer/pronunciationTrainer.py core/NumberReplacer 5
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -42,7 +42,7 @@
     current_recorded_word_locations: list
     current_recorded_intonations: torch.tensor
     current_words_pronunciation_accuracy = []
-    categories_thresholds = np.array([80, 60, 59])
+    categories_thresholds = np.array([80, 60, 58])
 
     sampling_rate = 16000
 
============
[job-id] 701e0842cac243859e473b9dc04495a7
aip_trainer/pronunciationTrainer.py core/NumberReplacer 6
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -44,7 +44,7 @@
     current_words_pronunciation_accuracy = []
     categories_thresholds = np.array([80, 60, 59])
 
-    sampling_rate = 16000
+    sampling_rate = 16001
 
     def __init__(self, asr_model: mi.IASRModel, word_to_ipa_coverter: mi.ITextToPhonemModel) -> None:
         self.asr_model = asr_model
============
[job-id] 4ba7326d858449e7884aa3ed398d3907
aip_trainer/pronunciationTrainer.py core/NumberReplacer 7
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -44,7 +44,7 @@
     current_words_pronunciation_accuracy = []
     categories_thresholds = np.array([80, 60, 59])
 
-    sampling_rate = 16000
+    sampling_rate = 15999
 
     def __init__(self, asr_model: mi.IASRModel, word_to_ipa_coverter: mi.ITextToPhonemModel) -> None:
         self.asr_model = asr_model
============
[job-id] 1289eb197ea54bc591765a3a6286cf8d
aip_trainer/pronunciationTrainer.py core/NumberReplacer 8
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = 1.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] 1c1fc95677aa4f3993c8cbeb61a0b608
aip_trainer/pronunciationTrainer.py core/NumberReplacer 9
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -55,7 +55,7 @@
         audio_transcript = self.asr_model.getTranscript()
         word_locations_in_samples = self.asr_model.getWordLocations()
 
-        fade_duration_in_samples = 0.05*self.sampling_rate
+        fade_duration_in_samples = -0.95*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
============
[job-id] cdfba2275aab4a8d9ff2d90ebe084fa2
aip_trainer/pronunciationTrainer.py core/NumberReplacer 10
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum( 1, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] 2e57393a818145a59664768081722c58
aip_trainer/pronunciationTrainer.py core/NumberReplacer 11
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -56,7 +56,7 @@
         word_locations_in_samples = self.asr_model.getWordLocations()
 
         fade_duration_in_samples = 0.05*self.sampling_rate
-        word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
+        word_locations_in_samples = [(int(np.maximum( -1, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
             audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
============
[job-id] 9a3185db768644d080735dabfd3fea2d
aip_trainer/pronunciationTrainer.py core/NumberReplacer 12
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples- 2, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] 8364c34d2d6448cba2156e4ecba09ecc
aip_trainer/pronunciationTrainer.py core/NumberReplacer 13
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -57,7 +57,7 @@
 
         fade_duration_in_samples = 0.05*self.sampling_rate
         word_locations_in_samples = [(int(np.maximum(0, word['start_ts']-fade_duration_in_samples)), int(np.minimum(
-            audio_length_in_samples-1, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
+            audio_length_in_samples- 0, word['end_ts']+fade_duration_in_samples))) for word in word_locations_in_samples]
 
         return audio_transcript, word_locations_in_samples
 
============
[job-id] bc2e87185c5f41f6829cd2e1777b67b9
aip_trainer/pronunciationTrainer.py core/NumberReplacer 14
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -106,7 +106,7 @@
 
         app_logger.info('starting getTranscriptAndWordsLocations...')
         current_recorded_transcript, current_recorded_word_locations = self.getTranscriptAndWordsLocations(
-            current_recorded_audio.shape[1])
+            current_recorded_audio.shape[ 2])
         app_logger.info('starting convertToPhonem...')
         current_recorded_ipa = self.ipa_converter.convertToPhonem(current_recorded_transcript)
 
============
[job-id] 30279a595c7b4fc1a4544f482130e95d
aip_trainer/pronunciationTrainer.py core/NumberReplacer 15
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -106,7 +106,7 @@
 
         app_logger.info('starting getTranscriptAndWordsLocations...')
         current_recorded_transcript, current_recorded_word_locations = self.getTranscriptAndWordsLocations(
-            current_recorded_audio.shape[1])
+            current_recorded_audio.shape[ 0])
         app_logger.info('starting convertToPhonem...')
         current_recorded_ipa = self.ipa_converter.convertToPhonem(current_recorded_transcript)
 
============
[job-id] 84d9a8fde74042beb722df30e01d7406
aip_trainer/pronunciationTrainer.py core/NumberReplacer 16
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [ 1])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] 22a33b3e04454a30a01cc30664e16cc7
aip_trainer/pronunciationTrainer.py core/NumberReplacer 17
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -118,7 +118,7 @@
         end_time = []
         for word_idx in range(len(mapped_words_indices)):
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                    [0])/self.sampling_rate)
+                                    [ -1])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                   [1])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
============
[job-id] 5331ec7ccf0149558a3b87d0aa0f3ac8
aip_trainer/pronunciationTrainer.py core/NumberReplacer 18
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [ 2])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 718ccd5f9f4a4b2ebd223aea4a6982bd
aip_trainer/pronunciationTrainer.py core/NumberReplacer 19
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -120,7 +120,7 @@
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
-                                  [1])/self.sampling_rate)
+                                  [ 0])/self.sampling_rate)
         return ' '.join([str(time) for time in start_time]), ' '.join([str(time) for time in end_time])
 
     ##################### END ASR Functions ###########################
============
[job-id] 4f480226df8a424d89aa4a6f9d34a4b6
aip_trainer/pronunciationTrainer.py core/NumberReplacer 20
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -130,7 +130,7 @@
         words_estimated = recorded_transcript.split()
 
         if real_text is None:
-            words_real = self.current_transcript[0].split()
+            words_real = self.current_transcript[ 1].split()
         else:
             words_real = real_text.split()
 
============
[job-id] 24e7d697b9b74f26a3220d39b775bba0
aip_trainer/pronunciationTrainer.py core/NumberReplacer 21
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -130,7 +130,7 @@
         words_estimated = recorded_transcript.split()
 
         if real_text is None:
-            words_real = self.current_transcript[0].split()
+            words_real = self.current_transcript[ -1].split()
         else:
             words_real = real_text.split()
 
============
[job-id] 507e456e3913428e92da6e59f611d751
aip_trainer/pronunciationTrainer.py core/NumberReplacer 22
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)- 2:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] e5b9bcf6f7b946e5bc65f00f6c361afd
aip_trainer/pronunciationTrainer.py core/NumberReplacer 23
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.SURVIVED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -140,7 +140,7 @@
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
         for word_idx in range(len(words_real)):
-            if word_idx >= len(mapped_words)-1:
+            if word_idx >= len(mapped_words)- 0:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
                 (words_real[word_idx],    mapped_words[word_idx]))
============
[job-id] 3329fcc5a6104f9cb1d7269bc34d5054
aip_trainer/pronunciationTrainer.py core/NumberReplacer 24
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -149,7 +149,7 @@
         return real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices
 
     def getPronunciationAccuracy(self, real_and_transcribed_words_ipa) -> tuple[float, list]:
-        total_mismatches = 0.
+        total_mismatches = 1.0
         number_of_phonemes = 0.
         current_words_pronunciation_accuracy = []
         for pair in real_and_transcribed_words_ipa:
============
[job-id] c682abd9ee3845509399fa74981869b0
aip_trainer/pronunciationTrainer.py core/NumberReplacer 25
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -149,7 +149,7 @@
         return real_and_transcribed_words, real_and_transcribed_words_ipa, mapped_words_indices
 
     def getPronunciationAccuracy(self, real_and_transcribed_words_ipa) -> tuple[float, list]:
-        total_mismatches = 0.
+        total_mismatches = -1.0
         number_of_phonemes = 0.
         current_words_pronunciation_accuracy = []
         for pair in real_and_transcribed_words_ipa:
============
[job-id] 1789ccf68c5c48e9aea80ddbaa9c1aa5
aip_trainer/pronunciationTrainer.py core/NumberReplacer 26
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -150,7 +150,7 @@
 
     def getPronunciationAccuracy(self, real_and_transcribed_words_ipa) -> tuple[float, list]:
         total_mismatches = 0.
-        number_of_phonemes = 0.
+        number_of_phonemes = 1.0
         current_words_pronunciation_accuracy = []
         for pair in real_and_transcribed_words_ipa:
 
============
[job-id] 3d4181af95b84982bba80946e016dcc1
aip_trainer/pronunciationTrainer.py core/NumberReplacer 27
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -150,7 +150,7 @@
 
     def getPronunciationAccuracy(self, real_and_transcribed_words_ipa) -> tuple[float, list]:
         total_mismatches = 0.
-        number_of_phonemes = 0.
+        number_of_phonemes = -1.0
         current_words_pronunciation_accuracy = []
         for pair in real_and_transcribed_words_ipa:
 
============
[job-id] f0164f60deb945e89e518c152db8be3e
aip_trainer/pronunciationTrainer.py core/NumberReplacer 28
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -154,7 +154,7 @@
         current_words_pronunciation_accuracy = []
         for pair in real_and_transcribed_words_ipa:
 
-            real_without_punctuation = self.removePunctuation(pair[0]).lower()
+            real_without_punctuation = self.removePunctuation(pair[ 1]).lower()
             number_of_word_mismatches = WordMetrics.edit_distance_python(
                 real_without_punctuation, self.removePunctuation(pair[1]).lower())
             total_mismatches += number_of_word_mismatches
============
[job-id] be777ac2015b47c4bce9c37ecb9de16f
aip_trainer/pronunciationTrainer.py core/NumberReplacer 29
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -154,7 +154,7 @@
         current_words_pronunciation_accuracy = []
         for pair in real_and_transcribed_words_ipa:
 
-            real_without_punctuation = self.removePunctuation(pair[0]).lower()
+            real_without_punctuation = self.removePunctuation(pair[ -1]).lower()
             number_of_word_mismatches = WordMetrics.edit_distance_python(
                 real_without_punctuation, self.removePunctuation(pair[1]).lower())
             total_mismatches += number_of_word_mismatches
============
[job-id] b8770967d07b46c9828fef7065f635d1
aip_trainer/pronunciationTrainer.py core/NumberReplacer 30
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -156,7 +156,7 @@
 
             real_without_punctuation = self.removePunctuation(pair[0]).lower()
             number_of_word_mismatches = WordMetrics.edit_distance_python(
-                real_without_punctuation, self.removePunctuation(pair[1]).lower())
+                real_without_punctuation, self.removePunctuation(pair[ 2]).lower())
             total_mismatches += number_of_word_mismatches
             number_of_phonemes_in_word = len(real_without_punctuation)
             number_of_phonemes += number_of_phonemes_in_word
============
[job-id] a011e7c7ec664502baf3ad279d3fffad
aip_trainer/pronunciationTrainer.py core/NumberReplacer 31
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -156,7 +156,7 @@
 
             real_without_punctuation = self.removePunctuation(pair[0]).lower()
             number_of_word_mismatches = WordMetrics.edit_distance_python(
-                real_without_punctuation, self.removePunctuation(pair[1]).lower())
+                real_without_punctuation, self.removePunctuation(pair[ 0]).lower())
             total_mismatches += number_of_word_mismatches
             number_of_phonemes_in_word = len(real_without_punctuation)
             number_of_phonemes += number_of_phonemes_in_word
============
[job-id] 73f950c6088f4b3790dc3f7c1dbad094
aip_trainer/pronunciationTrainer.py core/NumberReplacer 32
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word* 101)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 2b81e6c63bc547a2bc0c4946cdceb669
aip_trainer/pronunciationTrainer.py core/NumberReplacer 33
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -162,7 +162,7 @@
             number_of_phonemes += number_of_phonemes_in_word
 
             current_words_pronunciation_accuracy.append(float(
-                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
+                number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word* 99)
 
         percentage_of_correct_pronunciations = (
             number_of_phonemes-total_mismatches)/number_of_phonemes*100
============
[job-id] 02a4def168984207b8d3271f21242921
aip_trainer/pronunciationTrainer.py core/NumberReplacer 34
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes* 101
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] 07d40fb8252a4fe2b1164937b2ae9228
aip_trainer/pronunciationTrainer.py core/NumberReplacer 35
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -165,7 +165,7 @@
                 number_of_phonemes_in_word-number_of_word_mismatches)/number_of_phonemes_in_word*100)
 
         percentage_of_correct_pronunciations = (
-            number_of_phonemes-total_mismatches)/number_of_phonemes*100
+            number_of_phonemes-total_mismatches)/number_of_phonemes* 99
 
         return np.round(percentage_of_correct_pronunciations), current_words_pronunciation_accuracy
 
============
[job-id] db09c631c70049d3a08622e853bc2d60
aip_trainer/pronunciationTrainer.py core/ZeroIterationForLoop 0
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -116,7 +116,7 @@
     def getWordLocationsFromRecordInSeconds(self, word_locations, mapped_words_indices) -> tuple[str, str]:
         start_time = []
         end_time = []
-        for word_idx in range(len(mapped_words_indices)):
+        for word_idx in []:
             start_time.append(float(word_locations[mapped_words_indices[word_idx]]
                                     [0])/self.sampling_rate)
             end_time.append(float(word_locations[mapped_words_indices[word_idx]]
============
[job-id] f93918793f9443899384b63dc2011cf6
aip_trainer/pronunciationTrainer.py core/ZeroIterationForLoop 1
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -139,7 +139,7 @@
 
         real_and_transcribed_words = []
         real_and_transcribed_words_ipa = []
-        for word_idx in range(len(words_real)):
+        for word_idx in []:
             if word_idx >= len(mapped_words)-1:
                 mapped_words.append('-')
             real_and_transcribed_words.append(
============
[job-id] 8a5abe7730d9433c9d1f4043fd07c77b
aip_trainer/pronunciationTrainer.py core/ZeroIterationForLoop 2
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -152,7 +152,7 @@
         total_mismatches = 0.
         number_of_phonemes = 0.
         current_words_pronunciation_accuracy = []
-        for pair in real_and_transcribed_words_ipa:
+        for pair in []:
 
             real_without_punctuation = self.removePunctuation(pair[0]).lower()
             number_of_word_mismatches = WordMetrics.edit_distance_python(
============
[job-id] 32fc2d437dfc4f56882e1fe0302b8f26
aip_trainer/pronunciationTrainer.py core/ZeroIterationForLoop 3
worker outcome: WorkerOutcome.NORMAL, test outcome: TestOutcome.KILLED
=== DIFF ===
--- mutation diff ---
--- aaip_trainer/pronunciationTrainer.py
+++ baip_trainer/pronunciationTrainer.py
@@ -175,7 +175,7 @@
     def getWordsPronunciationCategory(self, accuracies) -> list:
         categories = []
 
-        for accuracy in accuracies:
+        for accuracy in []:
             categories.append(
                 self.getPronunciationCategoryFromAccuracy(accuracy))
 
============
total jobs: 263
complete: 263 (100.00%)
surviving mutants: 51 (19.39%)
